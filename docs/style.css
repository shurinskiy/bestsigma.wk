* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset, img, abbr, iframe {
  border: 0;
}

address, caption, cite, code, dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption, th {
  text-align: left;
}

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

:root {
  --size: 16px;
  --background: #fafafa;
  --text: #272727;
  --blue: #113859;
  --blue-rgb: 17, 56, 89;
  --container: 1400px;
  --gap: 24px;
}
@media screen and (max-width: 480px) {
  :root {
    --gap: 16px;
  }
}

.container {
  margin-left: auto;
  margin-right: auto;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: min(var(--container), 100% - var(--gap) * 2);
}
.container_abs {
  position: absolute;
  left: max(var(--gap), (100% - var(--container)) / 2);
}
.container_right {
  width: min(100% - var(--gap), 100% - (100% - var(--container)) / 2);
  margin-right: unset;
}
.container_left {
  width: min(100% - var(--gap), 100% - (100% - var(--container)) / 2);
  margin-left: unset;
}
.container__half {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: min(var(--container) / 2, 50%);
}
.container__full {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: min(var(--container), 100%);
}

#__bs_notify__ {
  background-color: rgba(27, 32, 50, 0.4) !important;
  color: rgba(250, 250, 250, 0.6) !important;
}

body {
  position: relative;
}
body::before {
  content: "";
  display: block;
  text-align: center;
  position: fixed;
  top: 30px;
  right: 5px;
  z-index: 9999;
  min-height: 16px;
  min-width: 40px;
  padding: 0 10px;
  font: 12px/16px Arial, sans-serif;
  color: #777;
  background-color: #ffffd3;
  border: 1px solid #bbb;
}
@media screen and (max-width: 1920px) {
  body::before {
    content: "xxxxlg:1920";
  }
}
@media screen and (max-width: 1680px) {
  body::before {
    content: "xxxlg:1680";
  }
}
@media screen and (max-width: 1440px) {
  body::before {
    content: "xxlg:1440";
  }
}
@media screen and (max-width: 1280px) {
  body::before {
    content: "xlg:1280";
  }
}
@media screen and (max-width: 1100px) {
  body::before {
    content: "lg:1100";
  }
}
@media screen and (max-width: 960px) {
  body::before {
    content: "md:960";
  }
}
@media screen and (max-width: 780px) {
  body::before {
    content: "sm:780";
  }
}
@media screen and (max-width: 640px) {
  body::before {
    content: "xs:640";
  }
}
@media screen and (max-width: 480px) {
  body::before {
    content: "xxs:480";
  }
}
@media screen and (max-width: 360px) {
  body::before {
    content: "xxxs:360";
  }
}

body, html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: var(--background);
  font-size: var(--size);
  color: var(--text);
  font-family: sans-serif;
  line-height: 1.2;
  font-weight: 400;
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
}

.footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-top: auto;
}

.sprite {
  display: none;
}

p {
  margin-bottom: 10px;
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
